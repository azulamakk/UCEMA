{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('access_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\napi.interceptors.response.use(response => response, async error => {\n  var _error$response;\n  const originalRequest = error.config;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    const refreshToken = localStorage.getItem('refresh_token');\n    if (refreshToken) {\n      try {\n        const response = await axios.post(`${API_URL}/auth/token/refresh/`, {\n          refresh: refreshToken\n        });\n        const {\n          access\n        } = response.data;\n        localStorage.setItem('access_token', access);\n        originalRequest.headers.Authorization = `Bearer ${access}`;\n        return api(originalRequest);\n      } catch (refreshError) {\n        localStorage.removeItem('access_token');\n        localStorage.removeItem('refresh_token');\n        window.location.href = '/login';\n      }\n    }\n  }\n  return Promise.reject(error);\n});\nexport const authAPI = {\n  register: userData => api.post('/auth/register/', userData),\n  login: credentials => api.post('/auth/login/', credentials),\n  getProfile: () => api.get('/auth/profile/'),\n  updateProfile: userData => api.patch('/auth/profile/', userData)\n};\nexport const servicesAPI = {\n  getCategories: () => api.get('/categories/'),\n  getServices: (params = {}) => api.get('/services/', {\n    params\n  }),\n  getService: id => api.get(`/services/${id}/`),\n  createService: serviceData => api.post('/services/', serviceData),\n  updateService: (id, serviceData) => api.patch(`/services/${id}/`, serviceData),\n  deleteService: id => api.delete(`/services/${id}/`),\n  getMyServices: () => api.get('/my-services/'),\n  createServiceRequest: requestData => api.post('/requests/', requestData),\n  getServiceRequests: () => api.get('/requests/'),\n  updateServiceRequest: (id, requestData) => api.patch(`/requests/${id}/`, requestData)\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","originalRequest","status","_retry","refreshToken","post","refresh","access","data","setItem","refreshError","removeItem","window","location","href","authAPI","register","userData","login","credentials","getProfile","get","updateProfile","patch","servicesAPI","getCategories","getServices","params","getService","id","createService","serviceData","updateService","deleteService","delete","getMyServices","createServiceRequest","requestData","getServiceRequests","updateServiceRequest"],"sources":["/Users/azulmakk/Desktop/UCEMA/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api';\n\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('access_token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\napi.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    const originalRequest = error.config;\n    \n    if (error.response?.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n      \n      const refreshToken = localStorage.getItem('refresh_token');\n      if (refreshToken) {\n        try {\n          const response = await axios.post(`${API_URL}/auth/token/refresh/`, {\n            refresh: refreshToken,\n          });\n          \n          const { access } = response.data;\n          localStorage.setItem('access_token', access);\n          \n          originalRequest.headers.Authorization = `Bearer ${access}`;\n          return api(originalRequest);\n        } catch (refreshError) {\n          localStorage.removeItem('access_token');\n          localStorage.removeItem('refresh_token');\n          window.location.href = '/login';\n        }\n      }\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\nexport const authAPI = {\n  register: (userData) => api.post('/auth/register/', userData),\n  login: (credentials) => api.post('/auth/login/', credentials),\n  getProfile: () => api.get('/auth/profile/'),\n  updateProfile: (userData) => api.patch('/auth/profile/', userData),\n};\n\nexport const servicesAPI = {\n  getCategories: () => api.get('/categories/'),\n  getServices: (params = {}) => api.get('/services/', { params }),\n  getService: (id) => api.get(`/services/${id}/`),\n  createService: (serviceData) => api.post('/services/', serviceData),\n  updateService: (id, serviceData) => api.patch(`/services/${id}/`, serviceData),\n  deleteService: (id) => api.delete(`/services/${id}/`),\n  getMyServices: () => api.get('/my-services/'),\n  createServiceRequest: (requestData) => api.post('/requests/', requestData),\n  getServiceRequests: () => api.get('/requests/'),\n  updateServiceRequest: (id, requestData) => api.patch(`/requests/${id}/`, requestData),\n};\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAE5E,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,OAAO;EAChBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEFH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EAClD,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAEDZ,GAAG,CAACI,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAKA,QAAQ,EACtB,MAAOH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACf,MAAMC,eAAe,GAAGL,KAAK,CAACL,MAAM;EAEpC,IAAI,EAAAS,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBE,MAAM,MAAK,GAAG,IAAI,CAACD,eAAe,CAACE,MAAM,EAAE;IAC7DF,eAAe,CAACE,MAAM,GAAG,IAAI;IAE7B,MAAMC,YAAY,GAAGX,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;IAC1D,IAAIU,YAAY,EAAE;MAChB,IAAI;QACF,MAAML,QAAQ,GAAG,MAAMpB,KAAK,CAAC0B,IAAI,CAAC,GAAGzB,OAAO,sBAAsB,EAAE;UAClE0B,OAAO,EAAEF;QACX,CAAC,CAAC;QAEF,MAAM;UAAEG;QAAO,CAAC,GAAGR,QAAQ,CAACS,IAAI;QAChCf,YAAY,CAACgB,OAAO,CAAC,cAAc,EAAEF,MAAM,CAAC;QAE5CN,eAAe,CAACd,OAAO,CAACQ,aAAa,GAAG,UAAUY,MAAM,EAAE;QAC1D,OAAOvB,GAAG,CAACiB,eAAe,CAAC;MAC7B,CAAC,CAAC,OAAOS,YAAY,EAAE;QACrBjB,YAAY,CAACkB,UAAU,CAAC,cAAc,CAAC;QACvClB,YAAY,CAACkB,UAAU,CAAC,eAAe,CAAC;QACxCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;MACjC;IACF;EACF;EAEA,OAAOjB,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,OAAO,MAAMmB,OAAO,GAAG;EACrBC,QAAQ,EAAGC,QAAQ,IAAKjC,GAAG,CAACqB,IAAI,CAAC,iBAAiB,EAAEY,QAAQ,CAAC;EAC7DC,KAAK,EAAGC,WAAW,IAAKnC,GAAG,CAACqB,IAAI,CAAC,cAAc,EAAEc,WAAW,CAAC;EAC7DC,UAAU,EAAEA,CAAA,KAAMpC,GAAG,CAACqC,GAAG,CAAC,gBAAgB,CAAC;EAC3CC,aAAa,EAAGL,QAAQ,IAAKjC,GAAG,CAACuC,KAAK,CAAC,gBAAgB,EAAEN,QAAQ;AACnE,CAAC;AAED,OAAO,MAAMO,WAAW,GAAG;EACzBC,aAAa,EAAEA,CAAA,KAAMzC,GAAG,CAACqC,GAAG,CAAC,cAAc,CAAC;EAC5CK,WAAW,EAAEA,CAACC,MAAM,GAAG,CAAC,CAAC,KAAK3C,GAAG,CAACqC,GAAG,CAAC,YAAY,EAAE;IAAEM;EAAO,CAAC,CAAC;EAC/DC,UAAU,EAAGC,EAAE,IAAK7C,GAAG,CAACqC,GAAG,CAAC,aAAaQ,EAAE,GAAG,CAAC;EAC/CC,aAAa,EAAGC,WAAW,IAAK/C,GAAG,CAACqB,IAAI,CAAC,YAAY,EAAE0B,WAAW,CAAC;EACnEC,aAAa,EAAEA,CAACH,EAAE,EAAEE,WAAW,KAAK/C,GAAG,CAACuC,KAAK,CAAC,aAAaM,EAAE,GAAG,EAAEE,WAAW,CAAC;EAC9EE,aAAa,EAAGJ,EAAE,IAAK7C,GAAG,CAACkD,MAAM,CAAC,aAAaL,EAAE,GAAG,CAAC;EACrDM,aAAa,EAAEA,CAAA,KAAMnD,GAAG,CAACqC,GAAG,CAAC,eAAe,CAAC;EAC7Ce,oBAAoB,EAAGC,WAAW,IAAKrD,GAAG,CAACqB,IAAI,CAAC,YAAY,EAAEgC,WAAW,CAAC;EAC1EC,kBAAkB,EAAEA,CAAA,KAAMtD,GAAG,CAACqC,GAAG,CAAC,YAAY,CAAC;EAC/CkB,oBAAoB,EAAEA,CAACV,EAAE,EAAEQ,WAAW,KAAKrD,GAAG,CAACuC,KAAK,CAAC,aAAaM,EAAE,GAAG,EAAEQ,WAAW;AACtF,CAAC;AAED,eAAerD,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}